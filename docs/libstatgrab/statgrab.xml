<?xml version="1.0"?>

<refentry id="statgrab">

  <refmeta>
    <refentrytitle>libstatgrab</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>i-scream</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>statgrab</refname>
    <refname>libstatgrab</refname>
    <refpurpose>get system statistics</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;statgrab.h&gt;</funcsynopsisinfo>

      <funcprototype>
        <funcdef>sg_error <function>sg_init</function></funcdef>
        <paramdef>int <parameter>ignore_init_errors</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_shutdown</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_drop_privileges</function></funcdef>
        <void/>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_error <function>sg_get_error</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>const char *<function>sg_get_error_arg</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>int <function>sg_get_error_errno</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>const char *<function>sg_str_error</function></funcdef>
        <paramdef>sg_error <parameter>code</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_get_error_details</function></funcdef>
        <paramdef>sg_error_details *<parameter>err_details</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>char *<function>sg_strperror</function></funcdef>
        <paramdef>char **<parameter>buf</parameter></paramdef>
        <paramdef>const sg_error_details * const <parameter>err_details</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>size_t <function>sg_get_nelements</function></funcdef>
        <paramdef>const void *<parameter>data</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_stats_buf</function></funcdef>
        <paramdef>void *<parameter>data</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_lock_mutex</function></funcdef>
        <paramdef>const char *<parameter>mutex_name</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_unlock_mutex</function></funcdef>
        <paramdef>const char *<parameter>mutex_name</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_cpu_percents *<function>sg_get_cpu_percents</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_cpu_percents *<function>sg_get_cpu_percents_of</function></funcdef>
        <paramdef>sg_cpu_percent_source <parameter>cps</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_cpu_percents *<function>sg_get_cpu_percents_r</function></funcdef>
        <paramdef>const sg_cpu_stats *<parameter>whereof</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>void <function>sg_free_cpu_percents</function></funcdef>
        <paramdef>sg_cpu_percents *<parameter>data</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_cpu_stats *<function>sg_get_cpu_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_cpu_stats *<function>sg_get_cpu_stats_diff</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_cpu_stats *<function>sg_get_cpu_stats_r</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_cpu_stats *<function>sg_get_cpu_stats_diff_between</function></funcdef>
        <paramdef>const sg_cpu_stats *<parameter>cpu_now</parameter>, const sg_cpu_stats *<parameter>cpu_last</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_cpu_stats</function></funcdef>
        <paramdef>sg_cpu_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_disk_io_stats *<function>sg_get_disk_io_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_disk_io_stats *<function>sg_get_disk_io_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_disk_io_stats *<function>sg_get_disk_io_stats_diff</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_disk_io_stats *<function>sg_get_disk_io_stats_diff_between</function></funcdef>
        <paramdef>const sg_disk_io_stats *<parameter>cur</parameter></paramdef>
        <paramdef>const sg_disk_io_stats *<parameter>last</parameter></paramdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_disk_io_stats</function></funcdef>
        <paramdef>sg_disk_io_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_fs_stats *<function>sg_get_fs_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_fs_stats *<function>sg_get_fs_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_fs_stats</function></funcdef>
        <paramdef>sg_fs_stats *<parameter>data</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>const char **<function>sg_get_valid_filesystems</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_set_valid_filesystems</function></funcdef>
        <paramdef>const char *<parameter>valid_fs</parameter>[]</paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_host_info *<function>sg_get_host_info</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_host_info *<function>sg_get_host_info_r</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_host_info</function></funcdef>
        <paramdef>sg_host_info *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_load_stats *<function>sg_get_load_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_load_stats *<function>sg_get_load_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_load_stats</function></funcdef>
        <paramdef>sg_load_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_mem_stats *<function>sg_get_mem_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_mem_stats *<function>sg_get_mem_stats_r</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_mem_stats</function></funcdef>
        <paramdef>sg_mem_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_swap_stats *<function>sg_get_swap_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_swap_stats *<function>sg_get_swap_stats_r</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_swap_stats</function></funcdef>
        <paramdef>sg_swap_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_network_iface_stats *<function>sg_get_network_iface_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_network_iface_stats *<function>sg_get_network_iface_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_network_iface_stats</function></funcdef>
        <paramdef>sg_network_iface_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_network_io_stats *<function>sg_get_network_io_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_network_io_stats *<function>sg_get_network_io_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_network_io_stats *<function>sg_get_network_io_stats_diff</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_network_io_stats *<function>sg_get_network_io_stats_diff_between</function></funcdef>
        <paramdef>const sg_network_io_stats *<parameter>cur</parameter></paramdef>
        <paramdef>const sg_network_io_stats *<parameter>last</parameter></paramdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_network_io_stats</function></funcdef>
        <paramdef>sg_network_iface_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_page_stats *<function>sg_get_page_stats</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_page_stats *<function>sg_get_page_stats_r</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_page_stats *<function>sg_get_page_stats_diff</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_page_stats *<function>sg_get_page_stats_diff_between</function></funcdef>
        <paramdef>const sg_page_stats *<parameter>cur</parameter></paramdef>
        <paramdef>const sg_page_stats *<parameter>last</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_page_stats</function></funcdef>
        <paramdef>sg_page_stats *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_process_stats *<function>sg_get_process_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_process_stats *<function>sg_get_process_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_process_stats</function></funcdef>
        <paramdef>sg_process_stats *<parameter>data</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_process_count *<function>sg_get_process_count</function></funcdef>
        <void/>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_process_count *<function>sg_get_process_count_of</function></funcdef>
        <paramdef>sg_process_count_source <parameter>pcs</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_process_count *<function>sg_get_process_count_r</function></funcdef>
        <paramdef>sg_process_stats const *<parameter>whereof</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_process_count</function></funcdef>
        <paramdef>sg_process_count *<parameter>data</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sg_user_stats *<function>sg_get_user_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_user_stats *<function>sg_get_user_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_user_stats</function></funcdef>
        <paramdef>sg_user_stats *<parameter>data</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para>
      The statgrab library provides a cross-platform interface to get
      several system statistics. System statistics aren't standardised, so
      the statgrab library tries to choose the most important values over
      all supported operating systems. This implies that some values might
      not be available on every OS while some specific values are missing
      when there are no counterparts on any other OS.
    </para>
    <para>
      The libstatgrab is organised in components, each for interrelated
      statistics.

      <table frame='all'><!--<title>Components</title>-->
      <tgroup cols='2' align='left' colsep='1' rowsep='1'>
        <colspec colname='component'/>
        <colspec colname='statistics'/>
      <thead>
      <row>
        <entry>component</entry>
        <entry>statistics</entry>
      </row>
      </thead>
      <tbody>
      <row>
        <entry>cpu</entry>
        <entry><structname>sg_cpu_stats</structname>, <structname>sg_cpu_percents</structname></entry>
      </row>
      <row>
        <entry>disk</entry>
        <entry><structname>sg_disk_io_stats</structname>, <structname>sg_fs_stats</structname></entry>
      </row>
      <row>
        <entry>load</entry>
        <entry><structname>sg_load_stats</structname></entry>
      </row>
      <row>
        <entry>mem</entry>
        <entry><structname>sg_mem_stats</structname></entry>
      </row>
      <row>
        <entry>network</entry>
        <entry><structname>sg_network_io_stats</structname>, <structname>sg_network_iface_stats</structname></entry>
      </row>
      <row>
        <entry>os</entry>
        <entry><structname>sg_host_info</structname></entry>
      </row>
      <row>
        <entry>page</entry>
        <entry><structname>sg_page_stats</structname></entry>
      </row>
      <row>
        <entry>process</entry>
        <entry><structname>sg_process_stats</structname>, <structname>sg_process_count</structname></entry>
      </row>
      <row>
        <entry>swap</entry>
        <entry><structname>sg_swap_stats</structname></entry>
      </row>
      <row>
        <entry>user</entry>
        <entry><structname>sg_user_stats</structname></entry>
      </row>
      </tbody>
      </tgroup>
      </table>
    </para>
    <para>
      The library was originally written to support the i-scream
      central monitoring system, but has since become a standalone
      package. It has been ported to work on Linux, NetBSD, FreeBSD,
      OpenBSD, DragonFly BSD, Solaris, HP-UX, AIX and Cygwin.
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <simplelist type="inline">
      <member>
        <citerefentry>
          <refentrytitle>sg_intro</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_cpu_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_disk_io_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_fs_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_host_info</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_load_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_mem_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_network_io_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_network_iface_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_page_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_process_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_swap_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_user_stats</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_get_error</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
        <citerefentry>
          <refentrytitle>sg_internal-intro</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
      </member>
    </simplelist>
  </refsect1>

  <refsect1>
    <title>Website</title>

    <simplelist type="vert">
      <member>
        <ulink url="http://www.i-scream.org/libstatgrab/">
          http://www.i-scream.org/libstatgrab/
        </ulink>
      </member>
    </simplelist>
  </refsect1>

</refentry>
