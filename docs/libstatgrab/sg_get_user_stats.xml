<?xml version="1.0"?>

<refentry id="sg_get_user_stats">

  <refmeta>
    <refentrytitle>sg_get_user_stats</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>i-scream</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>sg_get_user_stats</refname>
    <refname>sg_get_user_stats_r</refname>
    <refname>sg_free_user_stats</refname>
    <refpurpose>get the current logged in users</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;statgrab.h&gt;</funcsynopsisinfo>
      <funcprototype>
        <funcdef>sg_user_stats *<function>sg_get_user_stats</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_user_stats *<function>sg_get_user_stats_r</function></funcdef>
        <paramdef>size_t *<parameter>entries</parameter></paramdef>
      </funcprototype>
      <funcprototype>
        <funcdef>sg_error <function>sg_free_user_stats</function></funcdef>
        <paramdef>sg_user_stats *<parameter>data</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para>
      The user statistics module delivers some information about logged on
      users. Each logon is treated separately. Both statistic get functions,
      <function>sg_get_user_stats</function>() and
      <function>sg_get_user_stats_r</function>(), return a vector of
      <structname>sg_user_stats</structname> with
      <parameter>entries</parameter> elements.
    </para>
    <para>
      <table frame='all'><title>API Shortcut</title>
      <tgroup cols='3' align='left' colsep='1' rowsep='1'>
        <colspec colname='function'/>
        <colspec colname='returns'/>
        <colspec colname='data owner'/>
      <thead>
      <row>
        <entry>function</entry>
        <entry>returns</entry>
        <entry>data owner</entry>
      </row>
      </thead>
      <tbody>
      <row>
        <entry>sg_get_user_stats</entry>
        <entry><structname>sg_user_stats</structname> *</entry>
        <entry>libstatgrab (thread local)</entry>
      </row>
      <row>
        <entry>sg_get_user_stats_r</entry>
        <entry><structname>sg_user_stats</structname> *</entry>
        <entry>caller</entry>
      </row>
      </tbody>
      </tgroup>
      </table>
    </para>
    <para>
      The <structname>sg_user_stats</structname> vector received from
      <function>sg_get_user_stats_r</function>() must be freed using
      <function>sg_free_user_stats</function>() when not needed any more. The
      caller is responsible for doing it.
    </para>
  </refsect1>

  <refsect1>
    <title>Return Values</title>

    <para>
      The structure returned is of type
      <structname>sg_user_stats</structname>.
    </para>

    <programlisting>
typedef struct {
        char *login_name;
        char *record_id;
        size_t record_id_size;
        char *device;
        char *hostname;
        pid_t pid;
        time_t login_time;
        time_t systime;
} sg_user_stats;
    </programlisting>

    <variablelist>
      <varlistentry>
        <term><structfield>login_name</structfield></term>
        <listitem>
          <para>
            The username which was used to log in
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>record_id</structfield></term>
        <listitem>
          <para>
            Record identifier of host database containing login information
            (not necessarily 0-terminated)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>record_id_size</structfield></term>
        <listitem>
          <para>
            Size of the record identifier
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>device</structfield></term>
        <listitem>
          <para>
            Device name (eg. "pts/0") of the tty assigned to the login
            session
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>hostname</structfield></term>
        <listitem>
          <para>
            (remote) Hostname from where the user is logged on, eg.
            "infoterm7.some.kind.of.domain.local", "localhost",
            "10.42.17.4" or ":0.0" (in case it's a local logon
            via new xterm)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>pid</structfield></term>
        <listitem>
          <para>
            Process identifier of the process which made the entry to
            the logged on users database
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>login_time</structfield></term>
        <listitem>
          <para>
            Timestamp (time in seconds since epoch) when the user logged on
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><structfield>systime</structfield></term>
        <listitem>
          <para>
            The timestamp when the above stats where collected in seconds
            since epoch
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <simplelist type="inline">
      <member>
        <citerefentry>
          <refentrytitle>statgrab</refentrytitle>
          <manvolnum>3</manvolnum>
        </citerefentry>
      </member>
    </simplelist>
  </refsect1>

  <refsect1>
    <title>Website</title>

    <simplelist type="vert">
      <member>
        <ulink url="http://www.i-scream.org/libstatgrab/">
          http://www.i-scream.org/libstatgrab/
        </ulink>
      </member>
    </simplelist>
  </refsect1>

</refentry>
